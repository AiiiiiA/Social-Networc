{"version":3,"file":"static/js/874.3bf3ff31.chunk.js","mappings":"sUAEO,IAAMA,EAAe,SAACC,GAAK,OAAMA,EAAMC,KAAKC,SAAS,EAC/CC,EAAc,SAACH,GAAK,OAAMA,EAAMC,KAAKG,QAAQ,EAC7CC,EAAgB,SAACL,GAAK,OAAMA,EAAMC,KAAKK,UAAU,EACjDC,EAAiB,SAACP,GAAK,OAAMA,EAAMC,KAAKO,aAAaC,WAAW,EAChEC,EAAgB,SAACV,GAAK,OAAMA,EAAMC,KAAKU,UAAU,EACjDC,EAAyB,SAACZ,GAAK,OAAMA,EAAMC,KAAKY,mBAAmB,EACnEC,EAAiB,SAACd,GAAK,OAAMA,EAAMC,KAAKc,WAAW,EACnDC,EAAgB,SAAChB,GAAK,OAAMA,EAAMC,KAAKgB,WAAW,EAClDC,EAAoB,SAAClB,GAAK,OAAMA,EAAMC,KAAKO,aAAaW,cAAc,C,+GCTnF,GAAgB,WAAa,4BAA4B,UAAY,4BCArE,GAAgB,SAAW,uBAAuB,WAAa,yBAAyB,SAAW,uBAAuB,KAAO,mBAAmB,OAAS,qBAAqB,OAAS,sB,6BCwD3L,EApDa,SAAH,GAA+D,IAAzDlB,EAAI,EAAJA,KAAMY,EAAmB,EAAnBA,oBAAqBO,EAAW,EAAXA,YAAaC,EAAS,EAATA,UAEpD,OAEI,iBAAKC,UAAWC,EAAAA,SAAW,WAEvB,iBAAKD,UAAWC,EAAAA,WAAa,WAEzB,gBAAKC,IAA0B,MAArBvB,EAAKwB,OAAOC,MAAgBzB,EAAKwB,OAAOC,MAAQC,EAASC,IAAI,MAEvE,yBACK3B,EAAK4B,UACA,mBACEC,SAAUjB,EAAoBkB,MAAK,SAAAC,GAAE,OAAIA,IAAO/B,EAAK+B,EAAE,IACvDV,UAAWC,EAAAA,OAAUU,QACjB,WACIb,EAAYnB,EAAK+B,GACrB,EACH,SAAC,kEAIJ,mBACEF,SAAUjB,EAAoBkB,MAAK,SAAAC,GAAE,OAAIA,IAAO/B,EAAK+B,EAAE,IACvDV,UAAWC,EAAAA,OAAUU,QACjB,WACIZ,EAAUpB,EAAK+B,GACnB,EACH,SAAC,6EAMlB,UAAC,KAAI,CAACV,UAAWC,EAAAA,SAAYW,GAAI,YAAcjC,EAAK+B,GAAG,WACnD,iBAAKV,UAAWC,EAAAA,KAAO,WACnB,gBAAKD,UAAWC,EAAAA,KAAO,UACnB,uBAAItB,EAAKkC,UAEb,gBAAKb,UAAWC,EAAAA,OAAS,UACrB,yBAAMtB,EAAKmC,eAGnB,iBAAKd,UAAWC,EAAAA,SAAW,WACvB,yBAAK,oBACL,yBAAK,wBAKzB,E,UCtDA,EAAuB,wBAAvB,EAA4D,8BC4C5D,EA1CkB,SAAH,GAKX,IAL6G,IAA5Fc,EAAe,EAAfA,gBAAiBjC,EAAQ,EAARA,SAAUK,EAAW,EAAXA,YAAa6B,EAAe,EAAfA,gBAAiBrB,EAAW,EAAXA,YAAaE,EAAc,EAAdA,eAEnFoB,EAAaC,KAAKC,KAAKJ,EAAkBjC,GAEzCsC,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAK,CAAED,EAAAA,EAAGX,GAAIW,IAGxB,IAAIE,EAAeL,KAAKC,KAAKF,EAAatB,GAC1C,GAAwC6B,EAAAA,EAAAA,UAAS3B,GAAe,eAA3D4B,EAAa,KAAEC,EAAgB,KAChCC,GAAyBF,EAAgB,GAAK9B,EAAc,EAC5DiC,EAAyBH,EAAgB9B,EAE7C,OACI,iBAAKK,UAAWC,EAAO,UAClBwB,EAAgB,IACV,mBAAQd,QAAS,WAAQe,EAAiBD,EAAgB,EAAG,EAAE,SAAC,mCAItEL,EACIS,QAAO,SAAAC,GAAC,OAAIA,EAAET,GAAKM,GAAyBG,EAAET,GAAKO,CAAsB,IACzEG,KAAI,SAAAD,GACD,OACI,cAAc9B,UAAWb,IAAgB2C,EAAET,EACrCpB,EACA,KAAMU,QAAS,SAACqB,GAAQhB,EAAgBc,EAAET,EAAGI,EAAe,EAAE,SAC/DK,EAAET,GAHCS,EAAEpB,GAMlB,IAEHa,EAAeE,IACT,mBAAQd,QAAS,WAAQe,EAAiBD,EAAgB,EAAG,EAAE,SAAE,2CAMpF,ECFA,EApCgB,SAACQ,GACb,OACI,gBAAKjC,UAAU,sBAAqB,UAEhC,iBAAKA,UAAWC,EAAAA,MAAQ,WAEpB,gBAAKD,UAAWC,EAAAA,WAAa,UACzB,uBAAG,gFAGP,SAAC,EAAS,CACNc,gBAAiBkB,EAAMlB,gBACvBjC,SAAUmD,EAAMnD,SAChBK,YAAa8C,EAAM9C,YACnB6B,gBAAiBiB,EAAMjB,gBACvBrB,YAAasC,EAAMtC,YACnBE,eAAgBoC,EAAMpC,kBAG1B,gBAAKG,UAAWC,EAAAA,UAAY,SAEvBgC,EAAMrD,UAAUmD,KAAI,SAAAG,GAAC,OAClB,SAAC,EAAI,CAEDvD,KAAMuD,EACN3C,oBAAqB0C,EAAM1C,oBAC3BO,YAAamC,EAAMnC,YACnBC,UAAWkC,EAAMlC,WAJZmC,EAAExB,GAKT,UAM1B,E,UCUA,GAAeyB,EAAAA,EAAAA,KAbO,SAACzD,GAAK,MACxB,CACIE,WAAWH,EAAAA,EAAAA,IAAaC,GACxBI,UAAUD,EAAAA,EAAAA,IAAYH,GACtBM,YAAYD,EAAAA,EAAAA,IAAcL,GAC1BS,aAAaF,EAAAA,EAAAA,IAAeP,GAC5BW,YAAYD,EAAAA,EAAAA,IAAcV,GAC1Ba,qBAAqBD,EAAAA,EAAAA,IAAuBZ,GAC5CiB,aAAaD,EAAAA,EAAAA,IAAchB,GAC3BmB,gBAAgBD,EAAAA,EAAAA,IAAkBlB,GACrC,GAGmC,CACpC0D,aAAAA,EAAAA,GAAcrC,UAAAA,EAAAA,GAAWD,YAAAA,EAAAA,GAAakB,gBAAAA,EAAAA,IAD1C,EArCyB,SAACiB,GAMtB,OAJAI,EAAAA,EAAAA,YAAU,WACNJ,EAAMG,aAAaH,EAAM9C,YAAa8C,EAAMnD,SAChD,GAAG,CAACmD,EAAM9C,cAEF8C,EAAM5C,YACR,SAACiD,EAAA,EAAS,KACV,SAAC,EAAO,CACN1D,UAAWqD,EAAMrD,UACjBmC,gBAAiBkB,EAAMjD,WACvBF,SAAUmD,EAAMnD,SAChBK,YAAa8C,EAAM9C,YACnBE,WAAY4C,EAAM5C,WAClBE,oBAAqB0C,EAAM1C,oBAC3BQ,UAAWkC,EAAMlC,UACjBD,YAAamC,EAAMnC,YACnBH,YAAasC,EAAMtC,YACnBE,eAAgBoC,EAAMpC,eACtBmB,gBAAiBiB,EAAMjB,iBAGnC,G","sources":["Redux/usersSelectors.js","webpack://my-app/./src/components/FriendsContainer/Friends/Friends.module.css?5be1","webpack://my-app/./src/components/FriendsContainer/Friends/User/User.module.css?506e","components/FriendsContainer/Friends/User/User.jsx","webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","components/FriendsContainer/Friends/Friends.jsx","components/FriendsContainer/FriendsContainer.jsx"],"sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersData = (state) => (state.user.usersData);\r\nexport const getPageSize = (state) => (state.user.pageSize);\r\nexport const getTotalUsers = (state) => (state.user.totalUsers);\r\nexport const getCurrentPage = (state) => (state.user.selectedPage.currentPage);\r\nexport const getIsFetching = (state) => (state.user.isFetching);\r\nexport const getFollowingInProgress = (state) => (state.user.followingInProgress);\r\nexport const getProfileData = (state) => (state.user.profileData);\r\nexport const getPotionSize = (state) => (state.user.portionSize);\r\nexport const getCurrentPortion = (state) => (state.user.selectedPage.currentPortion)\r\n\r\n/* export const getUsersData = createSelector(getUsersDataSelector, (usersData) => (usersData)) */","// extracted by mini-css-extract-plugin\nexport default {\"usersTitle\":\"Friends_usersTitle__NL-0h\",\"usersList\":\"Friends_usersList__HzMJc\"};","// extracted by mini-css-extract-plugin\nexport default {\"userItem\":\"User_userItem__4-ddF\",\"userAvatar\":\"User_userAvatar__bOk7R\",\"userInfo\":\"User_userInfo__+s8e9\",\"name\":\"User_name__XcZLa\",\"status\":\"User_status__Y5D6B\",\"blubtn\":\"User_blubtn__FbyRl\"};","import s from './User.module.css';\r\nimport React from 'react';\r\nimport userImg from '../../../../assets/images/userImage.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst User = ({ user, followingInProgress, unfollowing, following }) => {\r\n\r\n    return (\r\n\r\n        <div className={s.userItem}>\r\n\r\n            <div className={s.userAvatar}>\r\n\r\n                <img src={user.photos.small != null ? user.photos.small : userImg} alt=\"\" />\r\n\r\n                <div>\r\n                    {user.followed\r\n                        ? <button\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            className={s.blubtn} onClick={\r\n                                () => {\r\n                                    unfollowing(user.id)\r\n                                }\r\n                            }>\r\n                            Отписаться\r\n                        </button>\r\n\r\n                        : <button\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            className={s.blubtn} onClick={\r\n                                () => {\r\n                                    following(user.id)\r\n                                }\r\n                            }>\r\n                            Подписаться\r\n                        </button>}\r\n                </div>\r\n            </div>\r\n\r\n            <Link className={s.userInfo} to={'/profile/' + user.id}>\r\n                <div className={s.info}>\r\n                    <div className={s.name}  >\r\n                        <p>{user.name}</p>\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.location}>\r\n                    <div>'user.country'</div>\r\n                    <div>'user.citi'</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Paginator_page__jm7pL\",\"activePage\":\"Paginator_activePage__UdaQw\"};","import { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, setSelectedPage, portionSize, currentPortion }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push({ i, id: i });\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(currentPortion);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            {portionNumber > 1\r\n                && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>\r\n                    Назад\r\n                </button>}\r\n\r\n            {pages\r\n                .filter(p => p.i >= leftPortionPageNumber && p.i <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return (\r\n                        <a key={p.id} className={currentPage === p.i\r\n                            ? s.activePage\r\n                            : null} onClick={(e) => { setSelectedPage(p.i, portionNumber) }}>\r\n                            {p.i}\r\n                        </a>\r\n                    )\r\n                })}\r\n\r\n            {portionCount > portionNumber\r\n                && <button onClick={() => { setPortionNumber(portionNumber + 1) }} >\r\n                    Вперед\r\n                </button>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import s from './Friends.module.css';\r\nimport React from 'react';\r\nimport User from './User/User';\r\nimport Paginator from '../../common/Paginator/Paginator';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div className='app-wrapper-content'>\r\n\r\n            <div className={s.users}>\r\n\r\n                <div className={s.usersTitle}>\r\n                    <p>Пользователи</p>\r\n                </div>\r\n\r\n                <Paginator\r\n                    totalItemsCount={props.totalItemsCount}\r\n                    pageSize={props.pageSize}\r\n                    currentPage={props.currentPage}\r\n                    setSelectedPage={props.setSelectedPage}\r\n                    portionSize={props.portionSize}\r\n                    currentPortion={props.currentPortion}\r\n                />\r\n\r\n                <div className={s.usersList}>\r\n\r\n                    {props.usersData.map(u =>\r\n                        <User\r\n                            key={u.id}\r\n                            user={u}\r\n                            followingInProgress={props.followingInProgress}\r\n                            unfollowing={props.unfollowing}\r\n                            following={props.following}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Friends;","import { connect } from \"react-redux\";\r\nimport { requestUsers, following, unfollowing, setSelectedPage } from \"../../Redux/userReducer\";\r\nimport {\r\n    getUsersData, getPageSize, getTotalUsers,\r\n    getCurrentPage, getIsFetching, getFollowingInProgress,\r\n    getPotionSize, getCurrentPortion\r\n} from \"../../Redux/usersSelectors\";\r\nimport React from 'react';\r\nimport Friends from './Friends/Friends';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { useEffect } from \"react\";\r\n\r\nconst FriendsContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.requestUsers(props.currentPage, props.pageSize)\r\n    }, [props.currentPage]);\r\n\r\n    return (props.isFetching\r\n        ? <Preloader />\r\n        : <Friends\r\n            usersData={props.usersData}\r\n            totalItemsCount={props.totalUsers}\r\n            pageSize={props.pageSize}\r\n            currentPage={props.currentPage}\r\n            isFetching={props.isFetching}\r\n            followingInProgress={props.followingInProgress}\r\n            following={props.following}\r\n            unfollowing={props.unfollowing}\r\n            portionSize={props.portionSize}\r\n            currentPortion={props.currentPortion}\r\n            setSelectedPage={props.setSelectedPage}\r\n        />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        usersData: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPotionSize(state),\r\n        currentPortion: getCurrentPortion(state)\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps, {\r\n    requestUsers, following, unfollowing, setSelectedPage\r\n})(FriendsContainer);"],"names":["getUsersData","state","user","usersData","getPageSize","pageSize","getTotalUsers","totalUsers","getCurrentPage","selectedPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getProfileData","profileData","getPotionSize","portionSize","getCurrentPortion","currentPortion","unfollowing","following","className","s","src","photos","small","userImg","alt","followed","disabled","some","id","onClick","to","name","status","totalItemsCount","setSelectedPage","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","e","props","u","connect","requestUsers","useEffect","Preloader"],"sourceRoot":""}